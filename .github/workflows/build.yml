on:
  push:
    paths:
      - "Dockerfile"
      - "build.sh"
      - ".github/workflows/*.*"
  workflow_dispatch: {}

name: Build

jobs:
  build-platform:
    strategy:
      matrix:
        platform: ["ubuntu-24.04", "ubuntu-24.04-arm"]
        version: ["3.14.0a4"] #, "3.14.0a3t"]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check platform
        run: |
          echo 'Running on...'
          uname -a

      - name: Build and Push
        run: |
          ./build.sh ${{ matrix.version }} push

      - name: Smoke Test
        run: |
          ./smoke-test.sh ${{ matrix.version }} "mr0grog/circle-python-pre-test@${IMAGE_DIGEST}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.platform }}
          path: ./digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build-platform
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ./digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create manifest list and push
        working-directory: ./digests
        run: |
          docker buildx imagetools create -t mr0grog/circle-python-pre-test:3.14.0a4 \
            $(printf 'mr0grog/circle-python-pre-test@sha256:%s ' *)

      # - name: Inspect image
      #   run: |
      #     docker buildx imagetools inspect ${{ env.DOCKERHUB_REPO }}:${{ steps.meta.outputs.version }}
      #     docker buildx imagetools inspect ${{ env.GHCR_REPO }}:${{ steps.meta.outputs.version }}
