version: 2.1

jobs:
  smoke_test:
    parameters:
      image:
        description: 'Docker image to test'
        type: string
      version:
        description: 'Expected version of Python to be used'
        type: string
    docker:
      - image: "<< parameters.image >>"
    steps:
      - run:
          name: Check Python Version
          command: |
            ACTUAL_VERSION="$(python --version)"
            echo "'python --version' == '${ACTUAL_VERSION}'"
            if [ "${ACTUAL_VERSION}" = 'Python << parameters.version >>' ]; then
              true
            else
              echo 'Did not find expected Python version!'
              false
            fi

      - run:
          name: Run a Simple Python Script
          command: |
            OUTPUT="$(python -c 'print("Hello from Python")')"
            echo "${OUTPUT}"
            if [ "${OUTPUT}" = 'Hello from Python' ]; then
              true
            else
              echo 'Did not get expected output!'
              false
            fi

      - run:
          name: Upgrade Pip
          command: |
            pip install --upgrade pip

  build_and_test:
    parameters:
      version:
        description: 'Version of Python to build an image for'
        type: string
      multiplatform:
        description: 'Whether to build for multiple platforms'
        type: boolean
        default: false
      publish:
        description: 'If set, publish the image under this name'
        type: string
        default: ''
    machine:
      image: ubuntu-2004:current
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Set up Docker containerd storage (required for multiplatform)
          command: |
            sudo cp docker-daemon-config.json /etc/docker/daemon.json
            sudo systemctl restart docker
            echo 'Docker Driver:'
            docker info -f '{{ .DriverStatus }}'
      - when:
          condition: << parameters.publish >>
          steps:
            - run:
                name: Docker Login
                command: docker login -u $DOCKER_TEST_USERNAME -p $DOCKER_TEST_TOKEN
      - run:
          name: Build and Publish Docker Image
          # Emulated multi-platform builds can be slow!
          no_output_timeout: 60m
          command: |
            PLATFORM_OPTION="$([[ '<< parameters.multiplatform >>' == 'true' ]] && echo '--multiplatform' || true)"
            PUBLISH_OPTION="$([ -n '<< parameters.publish >>' ] && echo '--publish "<< parameters.publish >>"' || true)"

            echo "Running: ./build.sh << parameters.version >> $PLATFORM_OPTION $PUBLISH_OPTION"
            echo "----------------"
            ./build.sh << parameters.version >> $PLATFORM_OPTION $PUBLISH_OPTION

workflows:
  ci:
    jobs:
      # TEMPORARILY DISABLED
      # - smoke_test:
      #     image: 'mr0grog/circle-python-pre:3.13.0b4'
      #     version: 3.13.0b4
      # - smoke_test:
      #     name: smoke_test-freethreading
      #     image: 'mr0grog/circle-python-pre:3.13.0b4t'
      #     version: 3.13.0b4
      - build_and_test:
          name: build_and_test_basic
          version: 3.13.0b4
      - allow_full_build:
          type: approval
          requires:
            - build_and_test_basic
      - build_and_test:
          name: build_and_test_full
          version: 3.13.0b4
          multiplatform: true
          publish: 'mr0grog/circle-python-pre-test:preview--<< pipeline.git.branch >>'
          requires:
            - allow_full_build
      - smoke_test:
          image: 'mr0grog/circle-python-pre-test:preview--<< pipeline.git.branch >>'
          version: 3.13.0b4
          requires:
            - build_and_test_full
